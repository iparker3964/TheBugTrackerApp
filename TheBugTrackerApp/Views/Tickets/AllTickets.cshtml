@using Microsoft.AspNetCore.Identity;
@using TheBugTrackerApp.Services.Interfaces
@using TheBugTrackerApp.Models.Enums

@inject UserManager<BTUser> UserManager
@inject IBTProjectService ProjectService

@model IEnumerable<TheBugTrackerApp.Models.Ticket>

@{
    ViewData["Title"] = "All Tickets";
    BTUser user = await UserManager.GetUserAsync(User);

}

<h1>All Tickets</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Created)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Updated)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Archived)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OwnerUser)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DeveloperUser)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TicketStatus)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TicketPriority)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TicketType)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Project)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.OrderByDescending(x => x.Created))
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Created)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Updated)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Archived)
                </td>
                <td>
                    @if (item.OwnerUser != null)
                    {
                        @Html.DisplayFor(modelItem => item.OwnerUser.FullName)
                    }
                </td>
                <td>
                    @if (item.DeveloperUser != null)
                    {
                        @Html.DisplayFor(modelItem => item.DeveloperUser.FullName)
                    }
                </td>
                <td>
                    @if (item.TicketStatus != null)
                    {
                        @Html.DisplayFor(modelItem => item.TicketStatus.Name)
                    }
                </td>
                <td>
                    @if (item.TicketPriority != null)
                    {
                        @Html.DisplayFor(modelItem => item.TicketPriority.Name)
                    }
                </td>
                <td>
                    @if (item.TicketType != null)
                    {
                        @Html.DisplayFor(modelItem => item.TicketType.Name)
                    }
                </td>
                <td>
                    @if (item.Project != null)
                    {
                        @Html.DisplayFor(modelItem => item.Project.Name)
                    }
                </td>
                <td>
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a>
                    @if (User.IsInRole(nameof(Roles.Admin)) || item.DeveloperUserId == user.Id || item.OwnerUserId == user.Id || (await ProjectService.IsAssignedProjectManagerAsync(user.Id, item.ProjectId)))
                    {
                        <span>|</span>
                        <a asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                    }
                    @if (User.IsInRole(nameof(Roles.Admin)) || (await ProjectService.IsAssignedProjectManagerAsync(user.Id, item.ProjectId)))
                    {
                        <span>|</span>

                        if (item.Archived)
                        {
                            <a asp-action="Restore" asp-route-id="@item.Id">Restore</a>
                        }
                        else
                        {
                            <a asp-action="Archive" asp-route-id="@item.Id">Archive</a>
                        }
                    }

                </td>
            </tr>
        }
    </tbody>
</table>
